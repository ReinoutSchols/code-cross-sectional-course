---
title: "Cross-sectioneel-code"
author: "Reinout Schols"
format: html
editor: visual
---

```{r}
#Packages inladen
library(readr)
library(rosetta)
library(haven)
library(dplyr)
library(ggplot2)
library(tidyverse)
library(behaviorchange)
library(psych)
library(corrplot)
library(car)
library(EFAtools)
library(papaja)
library(rempsyc)

```



```{r}
#Data inladen
setwd("C:/Users/reino/OneDrive/Documents/cross_sectioneel_onderzoek")
Data <- rosetta::getDat("852550750_epw.sav")
Data <- dat

```


### Deelnemers selecteren die geantwoord hebben op oordopjes dragen en beliefs.

```{r}
Data_EPW <- Data %>% filter(epw_Questions == 1)
```

###  Relevante informatie selecteren voor onderzoeksvraag
```{r}
# filteren voor voorspellers, uitkomstmaat en demografische variabelen

Data_EPW_gefilterd <- Data_EPW %>% select(contains(c('epw_Intention', 'epw_AttDirect_','epw_PBCDirect','epw_NrmDirect', 'age', 'gender', 'hasJob', 'currentEducation', 'prevEducation', 'id')))

Data_EPW_gefilterd_assump <- Data_EPW %>% select(contains(c('epw_Intention', 'epw_AttDirect_','epw_PBCDirect','epw_NrmDirect')))

# Na's verwijderen
Clean_data <- Data_EPW_gefilterd %>% 
  drop_na(contains(c('epw_AttDirect_','epw_PBCDirect','epw_NrmDirect', 'epw_Intention'))) 


#relevante kolommen selecteren voor onderzoek
relevante_variabelen <- Clean_data %>% select(contains(c('epw_PBCDirect','epw_NrmDirect'))) %>% colnames()
relevante_variabelen_1 <- Clean_data %>% select(contains(c('epw_PBCDirect','epw_NrmDirect', 'epw_AttDirect_'))) %>% colnames()

# Na's in leeftijd kolom tellen
sum(is.na(Clean_data$age))

# Mensen onder de 16 verwijderen
onder_16 <- Clean_data %>% filter(age < 16)
nrow(onder_16)
# Mensen boven de 40 verwijderen
boven_40 <- Clean_data %>% filter(age > 40)
nrow(boven_40)
# mensen zonder leeftijd verwijderen
Clean_data_16_40 <- Clean_data %>% filter(age >= 16 & age < 40)
nrow(Clean_data_16_40)


Clean_data_16_40_assump <- Clean_data_16_40 %>% select(contains(c( 'epw_AttDirect_','epw_PBCDirect','epw_NrmDirect','epw_Intention' )))

Clean_data_16_40_assump1 <- Clean_data_16_40 %>% select(contains(c( 'epw_AttDirect_','epw_PBCDirect','epw_NrmDirect' )))

```



## Demografische variabelen onderzoeken

```{r}
rosetta::descr(
 Clean_data_16_40,
  items = c(
    'age',
    'gender',
    'hasJob', 
    'currentEducation', 
    'prevEducation'),
  boxplot = TRUE,
  histogram = TRUE
);
```

# Item-niveau data screening
## intentie

```{r}
# voor items intentie
rosetta::descr(
 Clean_data_16_40,
  items = c(
    "epw_Intention_plan",
    "epw_Intention_will",
    "epw_Intention_want"),
  boxplot = TRUE,
  histogram = TRUE
);
```
## Attitude

```{r}

rosetta::descr(
 Clean_data_16_40,
  items = c(
     "epw_AttDirect_good",
    "epw_AttDirect_pleas",
    "epw_AttDirect_smart", 
    "epw_AttDirect_healt",
    "epw_AttDirect_excit"),
  boxplot = TRUE,
  histogram = TRUE
);
```

## Waargenomen norm

```{r}

rosetta::descr(
 Clean_data_16_40,
  items = c(
      "epw_NrmDirect_in1",
    "epw_NrmDirect_in2", 
    "epw_NrmDirect_dn1", 
    "epw_NrmDirect_dn2"),
  boxplot = TRUE,
  histogram = TRUE
);

```




## Waargenomen gedragscontrole

```{r}

rosetta::descr(
 Clean_data_16_40,
  items = c(
      "epw_PBCDirect_ifwanted",
    "epw_PBCDirect_easy", 
    "epw_PBCDirect_control", 
    "epw_PBCDirect_notOnlyMe", 
    "epw_PBCDirect_externalFactors"),
  boxplot = TRUE,
  histogram = TRUE
);
```
## Data screening item-niveau met plots volgens APA

```{r}
# plots volgens APA

# intentie
ggplot(Clean_data_16_40, aes(epw_Intention_plan)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))

ggplot(Clean_data_16_40, aes(epw_Intention_will)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))

ggplot(Clean_data_16_40, aes(epw_Intention_want)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))


# attitude
ggplot(Clean_data_16_40, aes(epw_AttDirect_pleas)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))

ggplot(Clean_data_16_40, aes(epw_AttDirect_excit)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))

ggplot(Clean_data_16_40, aes(epw_AttDirect_smart)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))

ggplot(Clean_data_16_40, aes(epw_AttDirect_healt)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))

ggplot(Clean_data_16_40, aes(epw_AttDirect_good)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))

# waargenomen norm
ggplot(Clean_data_16_40, aes(epw_NrmDirect_in1)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0) )

ggplot(Clean_data_16_40, aes(epw_NrmDirect_in2)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0)) 

ggplot(Clean_data_16_40, aes(epw_NrmDirect_dn1)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))

ggplot(Clean_data_16_40, aes(epw_NrmDirect_dn2)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))

 # waargenomen gedragscontrole

ggplot(Clean_data_16_40, aes(epw_PBCDirect_ifwanted)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0) )

ggplot(Clean_data_16_40, aes(epw_PBCDirect_easy)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0)) 

ggplot(Clean_data_16_40, aes(epw_PBCDirect_control)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))

ggplot(Clean_data_16_40, aes(epw_PBCDirect_externalFactors)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))

ggplot(Clean_data_16_40, aes(epw_PBCDirect_notOnlyMe)) +  
  geom_histogram()  + theme_apa() + labs(y="Count") + scale_y_continuous(expand = c(0, 0))


```



# assumpties checken factoranalyse

```{r}
# correlatie tabel maken van data
res <- cor(Clean_data_16_40_assump1)

# Kaiser-Meyer-Olkin criterion (KMO)

KMO(res)

# Bartlett test

cortest.bartlett(Clean_data_16_40_assump1)
```


# Factor analyse 

```{r}


# 3 factoren en drie determinanten

 rosetta::factorAnalysis(
  data = Clean_data_16_40,
  nfactors = 3,
  items = relevante_variabelen_1,
  fm = "minres",
  rotate = "oblimin",
  screePlot = TRUE,
  correlations = TRUE,
  summary = TRUE
)
 
# 4 factoren en drie determinanten

rosetta::factorAnalysis(
  data = Clean_data_16_40,
  nfactors = 4,
  items = relevante_variabelen_1,
  fm = "minres",
  rotate = "oblimin",
  screePlot = TRUE,
  correlations = TRUE,
  summary = TRUE
)

# 5 factoren en drie determinanten

rosetta::factorAnalysis(
  data = Clean_data_16_40,
  nfactors = 5,
  items = relevante_variabelen_1,
  fm = "minres",
  rotate = "oblimin",
  screePlot = TRUE,
  correlations = TRUE,
  summary = TRUE
)

#3 factoren, drie determinanten en drie items weggelaten 
# Om voor mezelf eens te kijken of het een verschil geeft

rosetta::factorAnalysis(
  data = Clean_data_16_40,
  nfactors = 3,
  items = c("epw_PBCDirect_ifwanted",
    "epw_PBCDirect_easy", 
    "epw_PBCDirect_control", 
    "epw_PBCDirect_notOnlyMe", 
    "epw_NrmDirect_in1",
    "epw_NrmDirect_in2", 
    "epw_NrmDirect_dn1", 
    "epw_NrmDirect_dn2",
     "epw_AttDirect_good",
    "epw_AttDirect_smart", 
    "epw_AttDirect_healt"),
  fm = "minres",
  rotate = "oblimin",
  screePlot = TRUE,
  correlations = TRUE,
  summary = TRUE
)

```


#Zelf screeplot maken van factor analyses
```{r}
n <- dim(res)[1]
scree_tb <- tibble(x = 1:n, 
                   y = sort(eigen(res)$value, decreasing = TRUE))

scree_plot <- scree_tb |>
  ggplot(aes(x, y)) +
  geom_point() +
  geom_line() +
  theme_minimal() +
  scale_x_continuous(breaks = 1:n) +
  ggtitle("Scree plot") + labs(x = "Aantal factoren", y =  "Eigenwaarde")

scree_plot
```





# Om tabellen te maken van factoranalyse volgens APA output
```{r}
# tabel drie determinanten en drie factoren
factor_analyse_1 <-  rosetta::factorAnalysis(
  data = Clean_data_16_40,
  nfactors = 3,
  items = relevante_variabelen_1,
  fm = "minres",
  rotate = "oblimin",
  screePlot = TRUE,
  correlations = TRUE,
  summary = TRUE
)

Tabel_EFA_1 <- nice_table(factor_analyse_1$output$loadings)
#print(Tabel_EFA_1, preview ="docx")

# Tabel drie determinanten en vier factoren
factor_analyse_2 <-  rosetta::factorAnalysis(
  data = Clean_data_16_40,
  nfactors = 4,
  items = relevante_variabelen_1,
  fm = "minres",
  rotate = "oblimin",
  screePlot = TRUE,
  correlations = TRUE,
  summary = TRUE
)

Tabel_EFA_2 <- nice_table(factor_analyse_2$output$loadings)
#print(Tabel_EFA_2, preview ="docx")

# Tabel drie determinanten en vijf factoren

factor_analyse_3 <-  rosetta::factorAnalysis(
  data = Clean_data_16_40,
  nfactors = 5,
  items = relevante_variabelen_1,
  fm = "minres",
  rotate = "oblimin",
  screePlot = TRUE,
  correlations = TRUE,
  summary = TRUE
)

Tabel_EFA_3 <- nice_table(factor_analyse_3$output$loadings)
#print(Tabel_EFA_3, preview ="docx")


```



### Data hercoderen

```{r}
Clean_data_16_40$epw_PBCDirect_externalFactors_RECODED <- 7 - Clean_data_16_40$epw_PBCDirect_externalFactors
```



# Item-analyse

## intentie

```{r}
rosetta::reliability(
  data = Clean_data_16_40,
  items = c(
    "epw_Intention_plan",
    "epw_Intention_will",
    "epw_Intention_want"
  ),
  descriptives = TRUE,
  itemLevel = TRUE,
  scatterMatrix = TRUE,
  itemOmittedCorsWithRest = TRUE
);
```

# directe attitude

```{r}

# Analyse zonder gefitlerd op leeftijd
rosetta::reliability(
  data = Clean_data_16_40,
  items = c(
    "epw_AttDirect_good",
    "epw_AttDirect_pleas",
    "epw_AttDirect_smart", 
    "epw_AttDirect_healt",
    "epw_AttDirect_excit"
  ),
  descriptives = TRUE,
  itemLevel = TRUE,
  scatterMatrix = TRUE,
  itemOmittedCorsWithRest = TRUE
);
```


```{r}
#Zonder excited
rosetta::reliability(
  data = Clean_data_16_40,
  items = c(
    "epw_AttDirect_good",
    "epw_AttDirect_pleas",
    "epw_AttDirect_smart", 
    "epw_AttDirect_healt"
  ),
  descriptives = TRUE,
  itemLevel = TRUE,
  scatterMatrix = TRUE,
  itemOmittedCorsWithRest = TRUE
);
```


```{r}
# Zonder excited en pleasant
rosetta::reliability(
  data = Clean_data_16_40,
  items = c(
    "epw_AttDirect_good",
    "epw_AttDirect_smart", 
    "epw_AttDirect_healt"
    
  ),
  descriptives = TRUE,
  itemLevel = TRUE,
  scatterMatrix = TRUE,
  itemOmittedCorsWithRest = TRUE
);
```


```{r}
# Enkel met smart en healt
rosetta::reliability(
  data = Clean_data,
  items = c(
    "epw_AttDirect_smart", 
    "epw_AttDirect_healt"
  ),
  descriptives = TRUE,
  itemLevel = TRUE,
  scatterMatrix = TRUE,
  itemOmittedCorsWithRest = TRUE
);
```


```{r}
### Item-analyse directe gedragscontrole


rosetta::reliability(
  data = Clean_data_16_40,
  items = c(
    "epw_PBCDirect_ifwanted",
    "epw_PBCDirect_easy", 
    "epw_PBCDirect_control", 
    "epw_PBCDirect_notOnlyMe", 
    "epw_PBCDirect_externalFactors_RECODED"
  ),
  descriptives = TRUE,
  itemLevel = TRUE,
  scatterMatrix = TRUE,
  itemOmittedCorsWithRest = TRUE
);
```

```{r}

# Zonder recoded externe factoren
rosetta::reliability(
  data = Clean_data_16_40,
  items = c(
    "epw_PBCDirect_ifwanted",
    "epw_PBCDirect_easy", 
    "epw_PBCDirect_control", 
    "epw_PBCDirect_notOnlyMe"
  ),
  descriptives = TRUE,
  itemLevel = TRUE,
  scatterMatrix = TRUE,
  itemOmittedCorsWithRest = TRUE
);
```




### Item-analyse directe normen
```{r}
rosetta::reliability(
  data = Clean_data_16_40,
  items = c(
    "epw_NrmDirect_in1",
    "epw_NrmDirect_in2", 
    "epw_NrmDirect_dn1", 
    "epw_NrmDirect_dn2"
  ),
  descriptives = TRUE,
  itemLevel = TRUE,
  scatterMatrix = TRUE,
  itemOmittedCorsWithRest = TRUE
);
```






# Data aggregeren

```{r}
#Intentie

Clean_data_16_40$Intentie <-
  rosetta::means(
    data = Clean_data_16_40,
    "epw_Intention_plan",
    "epw_Intention_will",
    "epw_Intention_want"
  );

# directe attitude

Clean_data_16_40$Attitude_Agg <-
  rosetta::means(
    data = Clean_data_16_40,
    "epw_AttDirect_smart", 
    "epw_AttDirect_healt"
  );

# Directe normen
Clean_data_16_40$Norm_Agg<-
  rosetta::means(
    data = Clean_data_16_40,
    "epw_NrmDirect_in1",
    "epw_NrmDirect_in2", 
    "epw_NrmDirect_dn1", 
    "epw_NrmDirect_dn2"
  );

# directe gedragscontrole

Clean_data_16_40$Gedragscontrole_Agg <-
  rosetta::means(
    data = Clean_data_16_40,
      "epw_PBCDirect_ifwanted",
    "epw_PBCDirect_easy", 
    "epw_PBCDirect_control", 
    "epw_PBCDirect_notOnlyMe"
  );




#Intentie

Clean_data_16_40_assump$Intentie <-
  rosetta::means(
    data = Clean_data_16_40_assump,
    "epw_Intention_plan",
    "epw_Intention_will",
    "epw_Intention_want"
  );

# directe attitude

Clean_data_16_40_assump$Attitude_Agg <-
  rosetta::means(
    data = Clean_data_16_40_assump,
    "epw_AttDirect_smart", 
    "epw_AttDirect_healt"
  );

# Directe normen
Clean_data_16_40_assump$Norm_Agg<-
  rosetta::means(
    data = Clean_data_16_40_assump,
    "epw_NrmDirect_in1",
    "epw_NrmDirect_in2", 
    "epw_NrmDirect_dn1", 
    "epw_NrmDirect_dn2"
  );

# directe gedragscontrole

Clean_data_16_40_assump$Gedragscontrole_Agg <-
  rosetta::means(
    data = Clean_data_16_40_assump,
      "epw_PBCDirect_ifwanted",
    "epw_PBCDirect_easy", 
    "epw_PBCDirect_control", 
    "epw_PBCDirect_notOnlyMe"
  );

```




# ciber plots alle drie de determinanten
```{r}
behaviorchange::CIBER(data=Clean_data_16_40,
                      determinants=c( "epw_PBCDirect_ifwanted",
    "epw_PBCDirect_easy", 
    "epw_PBCDirect_control", 
    "epw_PBCDirect_notOnlyMe",
    "Gedragscontrole_Agg",
    "epw_NrmDirect_in1",
    "epw_NrmDirect_in2", 
    "epw_NrmDirect_dn1", 
    "epw_NrmDirect_dn2",
    "Norm_Agg",
    "epw_AttDirect_smart", 
    "epw_AttDirect_healt",
    "Attitude_Agg"),targets=c( 'epw_intention'))
```






# CIber plots geaggregeerde schalen
```{r}
behaviorchange::CIBER(data=Clean_data_16_40,
                      determinants=c( "Gedragscontrole_Agg",
    "Norm_Agg", "Attitude_Agg"),targets=c( 'Intentie'))
```




# Beschrijvende statistieken opvragen

```{r}
DataScreening_Agg <- rosetta::descr(
Clean_data_16_40,
  items = c(
    'Intentie',
    'Norm_Agg', 
    'Gedragscontrole_Agg', 
    'Attitude_Agg'),
  boxplot = TRUE,
  histogram = TRUE
);
DataScreening_Agg


```


# Plots van univariate datascreening volgens APA

```{r}
ggplot(Clean_data_16_40, aes(Intentie)) +  
  geom_histogram(bins = 10, color = "black", fill = "grey")  + theme_apa() + labs(y="Count") 

ggplot(Clean_data_16_40, aes(Attitude_Agg)) +  
  geom_histogram(bins = 10, color = "black", fill = "grey")  + theme_apa() + labs(y="Count")  

ggplot(Clean_data_16_40, aes(Gedragscontrole_Agg)) +  
  geom_histogram(bins = 10, color = "black", fill = "grey")  + theme_apa() + labs(y="Count") 

ggplot(Clean_data_16_40, aes(Norm_Agg)) +  
  geom_histogram(bins = 10, color = "black", fill = "grey")  + theme_apa() + labs(y="Count") 


```





```{r}
ufs::associationMatrix(
  Clean_data_16_40,
  x = c(
   'Intentie',
    'Norm_Agg', 
    'Gedragscontrole_Agg', 
    'Attitude_Agg'
  )
);


```

#### Multiple reggressie analyse

```{r}
rosetta::regr(
    Intentie ~
      Attitude_Agg+
      Gedragscontrole_Agg + 
      Norm_Agg,
    collinearity = TRUE,
  data=Clean_data_16_40
);
```
```{r}
Model <- lm(Intentie ~ Attitude_Agg+ Norm_Agg + Gedragscontrole_Agg, Clean_data_16_40)
plot(Model)
plot(Model, 4)
```


```{r}
library(ggfortify)
autoplot(Model)
```


#### Verbanden voorspellers en afhankelijke variabele moeten lineair zijn

```{r}
ufs::scatterMatrix(
  Clean_data_16_40,
  items = c(
    'Intentie',
    'Norm_Agg', 
    'Gedragscontrole_Agg', 
    'Attitude_Agg'),);
```

```{r}
ggplot(Clean_data_16_40, aes(Intentie, Attitude_Agg)) +  
   geom_point()  + theme_apa() + stat_smooth(method = "lm",
                                           formula = y ~ x,
                                           geom = "smooth", color = "black")


ggplot(Clean_data_16_40, aes(Intentie, Gedragscontrole_Agg)) +  
   geom_point()  + theme_apa() + stat_smooth(method = "lm",
                                           formula = y ~ x,
                                           geom = "smooth", color = "black")


ggplot(Clean_data_16_40, aes(Intentie, Norm_Agg)) +  
   geom_point()  + theme_apa() + stat_smooth(method = "lm",
                                           formula = y ~ x,
                                           geom = "smooth", color = "black") 
```
```{r}
lowerq = quantile(Clean_data_16_40_assump$Intentie)[2]
upperq = quantile(Clean_data_16_40_assump$Intentie)[4]
iqr = upperq - lowerq 

extreme.threshold.upper = (iqr * 3) + upperq
extreme.threshold.lower = lowerq - (iqr * 3)


